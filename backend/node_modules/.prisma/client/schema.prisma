generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id           String    @id @default(cuid())
  email        String    @unique
  passwordHash String
  displayName  String
  role         Role      @default(USER)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  notes        Note[]
  sessions     Session[]
}

model Session {
  id               String   @id @default(cuid())
  user             User     @relation(fields: [userId], references: [id])
  userId           String
  refreshTokenHash String
  expiresAt        DateTime
  createdAt        DateTime @default(now())
}

model Note {
  id        String    @id @default(cuid())
  author    User      @relation(fields: [authorId], references: [id])
  authorId  String
  title     String
  content   String
  pinned    Boolean   @default(false)
  archived  Boolean   @default(false)
  deleted   Boolean   @default(false)
  deletedAt DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  tags      NoteTag[]

  @@index([authorId, pinned, archived, deleted])
}

model Tag {
  id        String    @id @default(cuid())
  name      String    @unique
  createdAt DateTime  @default(now())
  notes     NoteTag[]
}

model NoteTag {
  note   Note   @relation(fields: [noteId], references: [id])
  noteId String
  tag    Tag    @relation(fields: [tagId], references: [id])
  tagId  String

  @@id([noteId, tagId])
}

model RevokedToken {
  id        String    @id @default(cuid())
  jti       String    @unique
  type      TokenType
  expiresAt DateTime // = JWT 的 exp（秒）转换成 Date
  userId    String?
  createdAt DateTime  @default(now())

  @@index([expiresAt])
}

enum TokenType {
  ACCESS
  REFRESH
}
